#pragma once

#include "types.h"

#define PPU_STEP PPU::step(); PPU::step(); PPU::step();
#define BACKGROUND_LEFT (x > 7 || pmask.backgroundleft)

#define FETCH_CYCLES cycle > 0 && cycle < 257 || cycle >= 321 && cycle <= 336

namespace PPU
{
	void step();
	void ctrl(u8 v);
	void mask(u8 v);
	u8 status(u8 cycles);
	void oam_addr(u8 v);
	void oam_data(u8 v);
	void ppuscroll(u8 v);
	void ppuaddr(u8 v);
	void data_wb(u8 v);
	u8 data_rb();
	void reset();
	void clear_pixels();
	void pixels();
	void render_pixels();
	void render_nametables(u16 addrnt, int i, u32* pixels);
	void render_sprites();
	void render_pattern();
	void x_inc();
	void y_inc();
	void eval_sprites();
	bool odd_frame();
	u16 get_nt_addr();
	u8 get_nt_byte(u16 a);
	u16 get_at_addr();
	u8 get_at_byte(u16 a);
	u16 get_bg_addr(u8 fy);
	u8 get_bg_lo_byte(u16 addr);
	u8 get_bg_hi_byte(u16 addr);
	void load_registers();
	void update_registers();

	inline u8 dummy2007;
	inline u8 oamdma;
	inline u8 p2003;
	inline u8 p2004;
	inline u8 p2005;
	inline u8 p2006;
	inline u8 p2007;
	inline u16 ntaddr = 0;
	inline u16 ataddr = 0;
	inline u16 bgaddr = 0;
	inline u8 ntbyte;
	inline u8 atbyte;
	inline u8 lobg;
	inline u8 hibg;
	inline u8 lobits;
	inline u16 bgshiftlo;
	inline u16 bgshifthi;
	inline u8 atshiftlo;
	inline u8 atshifthi;
	inline u8 atlo;
	inline u8 athi;
	inline u8 sprite_count = 0;
	inline u8 sprite_0_line = 0;
	inline u8 scrolldata = 0;
	inline u64 pixeldata = 0;

	inline u16 nametableaddr;

	inline int scanline;
	inline int cycle;

	inline u32 frame;
	inline u32 tempcolor[8];
	inline u32 totalcycles;

	inline bool frame_ready;
	inline bool tabkey;
	inline bool oldtabkey;
	inline bool no_vbl;
	inline bool no_nmi;
	inline bool rendering = 0;

	inline u32 screen_pixels[NES_SCREEN_WIDTH * NES_SCREEN_HEIGHT] = {};
	inline u32 ntable_pixels[4][NES_SCREEN_WIDTH * NES_SCREEN_HEIGHT] = {};
	inline u32 sprite_pixels[NES_SCREEN_WIDTH * NES_SCREEN_HEIGHT] = {};
	inline u32 pattern_pixels[2][PATTERN_WIDTH * PATTERN_HEIGHT] = {};
	inline u32 palettes[192 / 3] = {};

	inline u8 palbuffer[192] =
	{
		0x61,0x61,0x61,0x00,0x00,0x88,0x1F,0x0D,0x99,0x37,0x13,0x79,0x56,0x12,0x60,0x5D,
		0x00,0x10,0x52,0x0E,0x00,0x3A,0x23,0x08,0x21,0x35,0x0C,0x0D,0x41,0x0E,0x17,0x44,
		0x17,0x00,0x3A,0x1F,0x00,0x2F,0x57,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0xAA,0xAA,0xAA,0x0D,0x4D,0xC4,0x4B,0x24,0xDE,0x69,0x12,0xCF,0x90,0x14,0xAD,0x9D,
		0x1C,0x48,0x92,0x34,0x04,0x73,0x50,0x05,0x5D,0x69,0x13,0x16,0x7A,0x11,0x13,0x80,
		0x08,0x12,0x76,0x49,0x1C,0x66,0x91,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0xFC,0xFC,0xFC,0x63,0x9A,0xFC,0x8A,0x7E,0xFC,0xB0,0x6A,0xFC,0xDD,0x6D,0xF2,0xE7,
		0x71,0xAB,0xE3,0x86,0x58,0xCC,0x9E,0x22,0xA8,0xB1,0x00,0x72,0xC1,0x00,0x5A,0xCD,
		0x4E,0x34,0xC2,0x8E,0x4F,0xBE,0xCE,0x42,0x42,0x42,0x00,0x00,0x00,0x00,0x00,0x00,
		0xFC,0xFC,0xFC,0xBE,0xD4,0xFC,0xCA,0xCA,0xFC,0xD9,0xC4,0xFC,0xEC,0xC1,0xFC,0xFA,
		0xC3,0xE7,0xF7,0xCE,0xC3,0xE2,0xCD,0xA7,0xDA,0xDB,0x9C,0xC8,0xE3,0x9E,0xBF,0xE5,
		0xB8,0xB2,0xEB,0xC8,0xB7,0xE5,0xEB,0xAC,0xAC,0xAC,0x00,0x00,0x00,0x00,0x00,0x00
	};
};

extern PpuRegisters lp;
extern SpriteData sprites[8];